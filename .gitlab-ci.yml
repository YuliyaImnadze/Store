stages:
  - build
  - docker
  - deploy
  - destroy

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

build:
  stage: build
  image: gradle:8.4-jdk17
  script:
    - gradle clean build -x test
  artifacts:
    paths:
      - build/libs/Store-0.0.1-SNAPSHOT.jar

docker-build:
  stage: docker
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  dependencies:
    - build

deploy:
  stage: deploy
  tags:
    - k8s
  image:
    name: alpine/k8s:1.27.3
    entrypoint: [""]
  script:
    - |
      helm upgrade --install store-app ./store-app \
        --namespace store-app \
        --create-namespace \
        --set image.repository=$CI_REGISTRY_IMAGE \
        --set image.tag=$CI_COMMIT_SHORT_SHA

      # Проверка и создание ServiceMonitor, если его нет
      if ! kubectl get servicemonitor store-app-monitor -n default &>/dev/null; then
        echo "Creating ServiceMonitor..."
        kubectl apply -f store-app/templates/servicemonitor.yaml
      else
        echo "ServiceMonitor already exists. Skipping creation."
      fi
  only:
    - master
  when: manual

destroy:
  stage: destroy
  tags:
    - k8s
  image:
    name: lachlanevenson/k8s-kubectl:latest
    entrypoint: [""]
  script:
    - kubectl delete namespace store-app
  only:
    - master
  when: manual
