package com.example.store.service.user;

import com.example.store.dto.user.UserDtoRequest;
import com.example.store.dto.user.UserDtoResponse;
import com.example.store.entity.ProductLine;
import com.example.store.entity.User;
import com.example.store.service.common.CommonService;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import java.util.UUID;


public interface UserService extends CommonService<User, UserDtoRequest, UserDtoResponse> {

//    UserDtoResponse create(UserDtoRequest userDtoRequest); // пока не удаляю. дальше все равно буду переопределять, чтобы пароль захэш

    Page<UserDtoResponse> findAll(Pageable pageable);

    Long totalCount();

    void addMoneyToSeller(ProductLine productLine);

    // ПРОВЕРЯЮ. потом удалить
    boolean wasTheProductPurchased(UUID buyerId, UUID productId);

//    - Для того чтобы воспользоваться магазином, пользователь должен быть зарегестрированным и войти в учетную запись;
//    - Пользователь может покупать товары, оставлять о них отзывы и ставить оценки;
//    - Пользователь может просмотреть свою историю покупок;
//    - Пользователь может совершить возврат в течении суток с момента покупки;
//    - Пользователь не может оценить или оставить отзыв о товаре, не купив его;
//    - Пользователь может просмотреть свои уведомления
//    - Пользователь может подать заявку на регистрацию организации;
//    - Организация дает возможность ее создателю добавлять товары и продавать их в данном магазине;
//    - Так как заявка на регистрацию организации добавляется авторизованным пользователем, то получателем выручки является данный пользователь;
    // тут не понятно, потому что дальше следующее:
//    - Выручку с покупки товаров, принадлежащих организации, за вычетом комиссии, получает организация. Комиссия произвольная (например, 5%);
//    - Пользователи, зарегестрировавшие свою организацию, могут добавлять заявки на регистрацию товаров, и после модерации будут добавлены в общий список товаров;


    //    - Админ может добавлять и изменять любую информацию о товарах в магазине;
//    - Для товара или группы товаров админ может добавлять и изменять скидки;
//    - Админ может просмотреть историю покупок любого пользователя;
//    - Админ может пополнять баланс пользователя;
//    - Админ может просматривать информацию о пользователях, удалять и замораживать их аккаунты; - я не знаю что такое замораживать и как потом отмораживать. поле какое то в юзере true/false?
//    - Админ может отправлять пользователям уведомления;
//    - Админ вправе принимать заявки на регистрацию организации, замораживать и удалять активные организации;

}
